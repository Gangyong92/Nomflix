{"version":3,"sources":["assets/noPosterSmall.png","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/Header.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Container","styled","div","Title","span","Grid","Section","title","children","role","aria-label","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","default","HomePresenter","nowPlaying","upcoming","popular","error","loading","Helmet","Loader","length","map","movie","poster_path","original_title","vote_average","release_date","substring","api","axios","create","baseURL","params","api_key","language","tvApi","get","append_to_response","term","query","encodeURIComponent","movieApi","HomeContainer","state","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResult","tvResult","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","a","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9395f84c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.ea2ad102.png\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  &:not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nexport default Section;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 28px;\n  margin-top: 20px;\n`;\n\nexport default () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      🕑\n    </span>\n  </Container>\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${(props) => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n};\n\nexport default Message;\n","import React from \"react\";\nimport PropTpyes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  height: 180px;\n  background-image: url(${(props) => props.bgUrl});\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  position: absolute;\n  bottom: 5px;\n  right: 5px;\n  opacity: 0;\n  transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity 0.3;\n    }\n    ${Rating} {\n      opacity 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : require(\"../assets/noPosterSmall.png\").default\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐\n          </span>\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>{title}</Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTpyes.number.isRequired,\n  imageUrl: PropTpyes.string,\n  title: PropTpyes.string.isRequired,\n  rating: PropTpyes.number,\n  year: PropTpyes.string,\n  isMovie: PropTpyes.bool,\n};\n\nexport default Poster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, upcoming, popular, error, loading }) => (\n  <>\n    <Helmet>\n      <title>Movies | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)} // substring 문자열 자르기\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Upcoming Movies\">\n            {upcoming.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)} // substring 문자열 자르기\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Movies\">\n            {popular.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)} // substring 문자열 자르기\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n    ;\n  </>\n);\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  upcoming: PropTypes.array,\n  popular: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default HomePresenter;\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"e3d8a5949d9c5c031969bba0911a7dd2\",\n    language: \"en-US\",\n  },\n});\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: (id) =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n\nexport const movieApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: (id) =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { movieApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying },\n      } = await movieApi.nowPlaying();\n      const {\n        data: { results: upcoming },\n      } = await movieApi.upcoming();\n      const {\n        data: { results: popular },\n      } = await movieApi.popular();\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular,\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find movie informations.\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, error, loading }) => (\n  <>\n    <Helmet>\n      <title>TV Shows | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated Shows\">\n            {topRated.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                } // substring 문자열 자르기\n                isMovie={false}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Shows\">\n            {popular.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                } // substring 문자열 자르기\n                isMovie={false}\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today\">\n            {airingToday.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                } // substring 문자열 자르기\n                isMovie={false}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n    ;\n  </>\n);\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { tvApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated },\n      } = await tvApi.topRated();\n      const {\n        data: { results: popular },\n      } = await tvApi.popular();\n      const {\n        data: { results: airingToday },\n      } = await tvApi.airingToday();\n\n      this.setState({\n        topRated,\n        popular,\n        airingToday,\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find TV informations.\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, error, loading } = this.state;\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport { movieApi } from \"api\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResult,\n  tvResult,\n  searchTerm,\n  error,\n  loading,\n  handleSubmit,\n  updateTerm,\n}) => (\n  <Container>\n    <Helmet>\n      <title>Search | Nomflix</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Search Movies or TV Shows...\"\n        value={searchTerm}\n        onChange={updateTerm}\n      />\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResult && movieResult.length > 0 && (\n          <Section title=\"Movie Results\">\n            {movieResult.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)} // substring 문자열 자르기\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {tvResult && tvResult.length > 0 && (\n          <Section title=\"TV Show Results\">\n            {tvResult.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                } // substring 문자열 자르기\n                isMovie={false}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n        {tvResult &&\n          movieResult &&\n          tvResult.length === 0 &&\n          movieResult.length === 0 && (\n            <Message color=\"#95a5a6\" text=\"Nothing found\" />\n          )}\n      </>\n    )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResult: PropTypes.array,\n  tvResult: PropTypes.array,\n  searchTerm: PropTypes.string,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired,\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { movieApi, tvApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    movieResult: null,\n    tvResult: null,\n    searchTerm: \"\",\n    error: null,\n    loading: false,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = (event) => {\n    const {\n      target: { value },\n    } = event;\n    this.setState({\n      searchTerm: value,\n    });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({\n      loading: true,\n    });\n    try {\n      const {\n        data: { results: movieResult },\n      } = await movieApi.search(searchTerm);\n      const {\n        data: { results: tvResult },\n      } = await tvApi.search(searchTerm);\n      this.setState({\n        movieResult,\n        tvResult,\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find results.\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  };\n\n  render() {\n    const {\n      movieResult,\n      tvResult,\n      searchTerm,\n      error,\n      loading,\n      updateTerm,\n    } = this.state;\n    return (\n      <SearchPresenter\n        movieResult={movieResult}\n        tvResult={tvResult}\n        searchTerm={searchTerm}\n        error={error}\n        loading={loading}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid\n    ${(props) => (props.current ? \"#3498db\" : \"transparent\")};\n  transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  /* 50px은 header height임. 100vh에서 -50px 한 이유는 스크롤\n  안뜨게 하게 위해서임. */\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  /* Container와 position 조합 한 이유는 Container 전체에 배경 넣기 위함 임.\n  top, left, width, height도 마찬가지 */\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-size: cover;\n  background-position: center;\n  filter: blur(3px);\n  opacity: 0.5;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  /* 이거 없으면 Cover에 Backdrop opacity 먹힘. Content가 Backdrop 안에 있는게\n   아니고 같은 레벨에 있어서 그럼 absolute로 주면 Container 기준으로 움직여서 relative\n  로 줌. position 안주고 하는 방법: Backdrop를 z-index: -1을 주거나 Content 안에 있는\n  Cover에 z-index: 1을 주면 됨. */\n  position: relative;\n`;\nconst Cover = styled.div`\n  background-image: url(${(props) => props.bgImage});\n  background-size: cover;\n  background-position: center;\n  width: 30%;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\nconst Item = styled.span``;\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst DetailPresenter = ({ result, error, loading }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Nomflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : (\n    <Container>\n      <Helmet>\n        <title>\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\n          | Nomflix\n        </title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require(\"../../assets/noPosterSmall.png\").default\n          }\n        />\n\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} / `\n                )}\n            </Item>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { movieApi, tvApi } from \"api\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname },\n    } = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\"), // Movie인지 확인\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id },\n      },\n      history: { push },\n    } = this.props;\n    /* isMovie만 있어도 되는 이유 movie, tv만 인식하고 나머지는 Route에 없기 때문에\n    sdfsfs 이런 url은 home으로 redirect 될 거임. */\n    const { isMovie } = this.state;\n    /* id 처리 */\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) {\n      return push(\"/\"); // id가 NaN이면 홈으로 감.\n    }\n    let result = null;\n    try {\n      if (isMovie) {\n        ({ data: result } = await movieApi.movieDetail(parsedId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parsedId));\n      }\n    } catch {\n      this.setState({\n        error: \"Can't find anything.\",\n      });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n\n  render() {\n    const { result, error, loading } = this.state;\n    return <DetailPresenter result={result} error={error} loading={loading} />;\n  }\n}\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Search from \"Routes/Search\";\nimport Header from \"Components/Header\";\nimport Detail from \"Routes/Detail\";\n\nexport default () => (\n  <Router>\n    <Header />\n    <Switch>\n      <Route\n        path=\"https://gangyong92.github.io/Nomflix/\"\n        exact\n        component={Home}\n      />\n      <Route path=\"https://gangyong92.github.io/Nomflix/tv\" component={TV} />\n      <Route\n        path=\"https://gangyong92.github.io/Nomflix/search\"\n        component={Search}\n      />\n      <Route\n        path=\"https://gangyong92.github.io/Nomflix/movie/:id\"\n        component={Detail}\n      />\n      <Route\n        path=\"https://gangyong92.github.io/Nomflix/show/:id\"\n        component={Detail}\n      />\n      <Redirect from=\"*\" to=\"/\" />\n    </Switch>\n  </Router>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n    *{\n        box-sizing: border-box;\n    }\n    body {\n        font-family: --apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size: 12px;\n        background-color: rgba(20,20,20,1);\n        color:white;\n        padding-top: 50px;\n    }\n`;\n\nexport default globalStyles;\n","import React, { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyle from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyle />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}